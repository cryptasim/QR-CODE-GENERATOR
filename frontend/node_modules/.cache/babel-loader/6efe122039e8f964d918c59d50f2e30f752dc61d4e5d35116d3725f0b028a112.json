{"ast":null,"code":"var _jsxFileName = \"/Users/asimkumarhansda/Desktop/QR CODE GENERATOR/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { ChakraProvider, Box, VStack, Input, Button, Image, Heading, Text, useToast, Container } from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [url, setUrl] = useState(\"\");\n  const [qrCode, setQrCode] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const toast = useToast();\n  const generateQRCode = async () => {\n    if (!url) {\n      toast({\n        title: \"Error\",\n        description: \"Please enter a URL\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true\n      });\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await axios.post(\"http://localhost:8000/generate\", {\n        url\n      });\n      setQrCode(response.data.qrCode);\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: \"Failed to generate QR code\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true\n      });\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(ChakraProvider, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxW: \"container.md\",\n      py: 10,\n      children: /*#__PURE__*/_jsxDEV(VStack, {\n        spacing: 6,\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          children: \"QR Code Generator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: \"Enter a URL to generate a QR code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Enter URL here...\",\n          value: url,\n          onChange: e => setUrl(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          colorScheme: \"blue\",\n          onClick: generateQRCode,\n          isLoading: loading,\n          loadingText: \"Generating\",\n          children: \"Generate QR Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), qrCode && /*#__PURE__*/_jsxDEV(Box, {\n          boxShadow: \"md\",\n          p: 4,\n          borderRadius: \"md\",\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: qrCode,\n            alt: \"QR Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"EIFHeCoX1jww5ylgEIqeHFoL620=\", false, function () {\n  return [useToast];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","ChakraProvider","Box","VStack","Input","Button","Image","Heading","Text","useToast","Container","axios","jsxDEV","_jsxDEV","App","_s","url","setUrl","qrCode","setQrCode","loading","setLoading","toast","generateQRCode","title","description","status","duration","isClosable","response","post","data","error","children","maxW","py","spacing","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","colorScheme","onClick","isLoading","loadingText","boxShadow","p","borderRadius","src","alt","_c","$RefreshReg$"],"sources":["/Users/asimkumarhansda/Desktop/QR CODE GENERATOR/frontend/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport {\n  ChakraProvider,\n  Box,\n  VStack,\n  Input,\n  Button,\n  Image,\n  Heading,\n  Text,\n  useToast,\n  Container,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [url, setUrl] = useState(\"\");\n  const [qrCode, setQrCode] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const toast = useToast();\n\n  const generateQRCode = async () => {\n    if (!url) {\n      toast({\n        title: \"Error\",\n        description: \"Please enter a URL\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true,\n      });\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const response = await axios.post(\"http://localhost:8000/generate\", {\n        url,\n      });\n      setQrCode(response.data.qrCode);\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: \"Failed to generate QR code\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true,\n      });\n    }\n    setLoading(false);\n  };\n\n  return (\n    <ChakraProvider>\n      <Container maxW=\"container.md\" py={10}>\n        <VStack spacing={6}>\n          <Heading>QR Code Generator</Heading>\n          <Text>Enter a URL to generate a QR code</Text>\n          <Input\n            placeholder=\"Enter URL here...\"\n            value={url}\n            onChange={(e) => setUrl(e.target.value)}\n          />\n          <Button\n            colorScheme=\"blue\"\n            onClick={generateQRCode}\n            isLoading={loading}\n            loadingText=\"Generating\"\n          >\n            Generate QR Code\n          </Button>\n          {qrCode && (\n            <Box boxShadow=\"md\" p={4} borderRadius=\"md\">\n              <Image src={qrCode} alt=\"QR Code\" />\n            </Box>\n          )}\n        </VStack>\n      </Container>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}